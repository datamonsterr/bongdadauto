/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    flexButtonCallback(this, &Screen2ViewBase::flexButtonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setXY(0, 0);
    background.setBitmap(touchgfx::Bitmap(BITMAP_BACKGROUND_XIN_ID));
    add(background);

    flexButton1.setIconBitmaps(Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID), Bitmap(BITMAP_BLUE_ICONS_HOME_32_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(0, 0, 32, 32);
    add(flexButton1);

    timeCount.setPosition(144, 16, 27, 16);
    timeCount.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    timeCount.setLinespacing(0);
    timeCount.setWildcard(touchgfx::TypedText(T___SINGLEUSE_B0HF).getText());
    timeCount.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M2AO));
    add(timeCount);

    pointRight.setPosition(171, 38, 15, 23);
    pointRight.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pointRight.setLinespacing(0);
    pointRight.setWildcard(touchgfx::TypedText(T___SINGLEUSE_X53D).getText());
    pointRight.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JWCB));
    add(pointRight);

    pointLeft.setPosition(129, 38, 15, 23);
    pointLeft.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pointLeft.setLinespacing(0);
    pointLeft.setWildcard(touchgfx::TypedText(T___SINGLEUSE_BOSI).getText());
    pointLeft.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8BW5));
    add(pointLeft);

    playerLeft.setXY(55, 146);
    playerLeft.setBitmap(touchgfx::Bitmap(BITMAP_MESSI1_ID));
    playerLeft.setWidth(40);
    playerLeft.setHeight(54);
    playerLeft.setBitmapPosition(0.0f, 1.5f);
    playerLeft.setScale(1.0f);
    playerLeft.setCameraDistance(1000.0f);
    playerLeft.setOrigo(20.0f, 27.0f, 1000.0f);
    playerLeft.setCamera(20.0f, 27.0f);
    playerLeft.setAngles(0.0f, 0.0f, 0.0f);
    playerLeft.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(playerLeft);

    ball.setXY(151, 185);
    ball.setBitmap(touchgfx::Bitmap(BITMAP_BONG_ID));
    ball.setWidth(15);
    ball.setHeight(15);
    ball.setBitmapPosition(0.0f, 0.0f);
    ball.setScale(1.0f);
    ball.setCameraDistance(1000.0f);
    ball.setOrigo(7.5f, 7.5f, 1000.0f);
    ball.setCamera(7.5f, 7.5f);
    ball.setAngles(0.0f, 0.0f, 0.0f);
    ball.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(ball);

    playerRight.setXY(236, 146);
    playerRight.setBitmap(touchgfx::Bitmap(BITMAP_RONALDO1_ID));
    playerRight.setWidth(30);
    playerRight.setHeight(54);
    playerRight.setBitmapPosition(-5.0f, 0.0f);
    playerRight.setScale(1.0f);
    playerRight.setCameraDistance(1000.0f);
    playerRight.setOrigo(15.0f, 27.0f, 1000.0f);
    playerRight.setCamera(15.0f, 27.0f);
    playerRight.setAngles(0.0f, 3.0f, 0.0f);
    playerRight.setRenderingAlgorithm(touchgfx::TextureMapper::NEAREST_NEIGHBOR);
    add(playerRight);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenSlideTransitionEast();
    }
}
